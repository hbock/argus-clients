# 
#  Argus Software
#  Copyright (c) 2000-2009 QoSient, LLC
#  All rights reserved.
# 
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
# 
#
# Various configurable paths (remember to edit Makefile.in, not Makefile)
#
#  $Id: //depot/argus/clients/clients/Makefile.in#26 $
#  $DateTime: 2009/05/15 13:49:11 $
#  $Change: 1735 $
#  


# Top level hierarchy

prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@

# Pathname of directory to install the system binaries
SBINDIR = @sbindir@
# Pathname of directory to install the system binaries
BINDIR = @bindir@
# Pathname of directory to install the include files
INCLDEST = @includedir@
# Pathname of directory to install the library
LIBDEST =  @libdir@
# Pathname of directory to install the man page
MANDEST = @mandir@

# VPATH
srcdir = @srcdir@
VPATH = @srcdir@

#
# You shouldn't need to edit anything below.
#

CC = @CC@
CCOPT = @V_CCOPT@
INCLS = -I. -I../include -I../common @V_INCLS@
DEFS = @DEFS@
COMPATLIB = @COMPATLIB@ @LIB_SASL@ @LIBS@ @V_THREADS@ @V_GEOIPDEP@

# Standard CFLAGS
CFLAGS = $(CCOPT) $(INCLS) $(DEFS)

INSTALL = @INSTALL@
RANLIB = @V_RANLIB@

#
# Flex and bison allow you to specify the prefixes of the global symbols
# used by the generated parser.  This allows programs to use lex/yacc
# and link against libpcap.  If you don't have flex or bison, get them.
#
LEX = @V_LEX@
YACC = @V_YACC@

# Explicitly define compilation rule since SunOS 4's make doesn't like gcc.
# Also, gcc does not remove the .o before forking 'as', which can be a
# problem if you don't own the file but can write to the directory.
.c.o:
	@rm -f $@
	$(CC) $(CFLAGS) -c $(srcdir)/$*.c

LIB = @INSTALL_LIB@/argus_parse.a @INSTALL_LIB@/argus_common.a @INSTALL_LIB@/argus_client.a

SRC = ra.c racount.c rasort.c rasplit.c rastrip.c rabins.c racluster.c rahisto.c ralabel.c \
	rapolicy.c ranonymize.c rapath.c rastream.c ratree.c rafilteraddr.c ratimerange.c \
	rauserdata.c raservices.c ratemplate.c

PROGS = @INSTALL_BIN@/ra @INSTALL_BIN@/racount @INSTALL_BIN@/rasort @INSTALL_BIN@/rasplit \
	@INSTALL_BIN@/rabins @INSTALL_BIN@/racluster @INSTALL_BIN@/rastrip \
	@INSTALL_BIN@/rahisto @INSTALL_BIN@/ralabel @INSTALL_BIN@/rapolicy \
	@INSTALL_BIN@/ranonymize @INSTALL_BIN@/rapath @INSTALL_BIN@/rastream \
	@INSTALL_BIN@/ratree @INSTALL_BIN@/rafilteraddr @INSTALL_BIN@/ratimerange \
	@INSTALL_BIN@/raports @INSTALL_BIN@/rahosts @INSTALL_BIN@/radark \
	@INSTALL_BIN@/rauserdata @INSTALL_BIN@/raservices @INSTALL_BIN@/ratemplate

all: $(PROGS)

@INSTALL_BIN@/ra: ra.o $(LIB)
	$(CC) $(CCOPT) -o $@ ra.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/rabins: rabins.o $(LIB)
	$(CC) $(CCOPT) -o $@ rabins.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/racluster: racluster.o $(LIB)
	$(CC) $(CCOPT) -o $@ racluster.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/racount: racount.o $(LIB)
	$(CC) $(CCOPT) -o $@ racount.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/rafilteraddr: rafilteraddr.o $(LIB)
	$(CC) $(CCOPT) -o $@ rafilteraddr.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/rahisto: rahisto.o $(LIB)
	$(CC) $(CCOPT) -o $@ rahisto.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/ralabel: ralabel.o $(LIB)
	$(CC) $(CCOPT) -o $@ ralabel.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/rapolicy: rapolicy.o $(LIB)
	$(CC) $(CCOPT) -o $@ rapolicy.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/ranonymize: ranonymize.o $(LIB)
	$(CC) $(CCOPT) -o $@ ranonymize.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/rapath: rapath.o $(LIB)
	$(CC) $(CCOPT) -o $@ rapath.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/rasort: rasort.o $(LIB)
	$(CC) $(CCOPT) -o $@ rasort.o $(LIB) $(COMPATLIB)
 
@INSTALL_BIN@/rasplit: rasplit.o $(LIB)
	$(CC) $(CCOPT) -o $@ rasplit.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/rasrvstats: rasrvstats.o $(LIB)
	$(CC) $(CCOPT) -o $@ rasrvstats.o $(LIB) $(COMPATLIB)
 
@INSTALL_BIN@/rastream: rastream.o $(LIB)
	$(CC) $(CCOPT) -o $@ rastream.o $(LIB) $(COMPATLIB)
 
@INSTALL_BIN@/rastrip: rastrip.o $(LIB)
	$(CC) $(CCOPT) -o $@ rastrip.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/ratimerange: ratimerange.o $(LIB)
	$(CC) $(CCOPT) -o $@ ratimerange.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/ratree: ratree.o $(LIB)
	$(CC) $(CCOPT) -o $@ ratree.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/raports: raports.pl
	$(INSTALL) raports.pl $@

@INSTALL_BIN@/rahosts: rahosts.pl
	$(INSTALL) rahosts.pl $@

@INSTALL_BIN@/radark: radark.pl
	$(INSTALL) radark.pl $@

@INSTALL_BIN@/rauserdata: rauserdata.o $(LIB)
	$(CC) $(CCOPT) -o $@ rauserdata.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/raservices: raservices.o $(LIB)
	$(CC) $(CCOPT) -o $@ raservices.o $(LIB) $(COMPATLIB)

@INSTALL_BIN@/ratemplate: ratemplate.o $(LIB)
	$(CC) $(CCOPT) -o $@ ratemplate.o $(LIB) $(COMPATLIB)

# We would like to say "OBJ = $(SRC:.c=.o)" but Ultrix's make cannot
# hack the extra indirection

OBJ =	$(SRC:.c=.o)

CLEANFILES = $(OBJ) $(PROGS)

install: force all
	[ -d $(DESTDIR)$(BINDIR) ] || \
		(mkdir -p $(DESTDIR)$(BINDIR); chmod 755 $(DESTDIR)$(BINDIR))
	$(INSTALL) @INSTALL_BIN@/ra* $(DESTDIR)$(BINDIR)

clean:
	rm -f $(CLEANFILES)

distclean:
	rm -f $(CLEANFILES) Makefile config.cache config.log config.status \
	    gnuc.h os-proto.h bpf_filter.c net

tags: $(TAGFILES)
	ctags -wtd $(TAGFILES)

tar:	force
	@cwd=`pwd` ; dir=`basename $$cwd` ; name=libpcap-`cat VERSION` ; \
	    list="" ; tar="tar chFFf" ; \
	    for i in `cat FILES` ; do list="$$list $$name/$$i" ; done; \
	    echo \
	    "rm -f ../$$name; ln -s $$dir ../$$name" ; \
	     rm -f ../$$name; ln -s $$dir ../$$name ; \
	    echo \
	    "(cd .. ; $$tar - [lots of files]) | compress > /tmp/$$name.tar.Z" ; \
	     (cd .. ; $$tar - $$list) | compress > /tmp/$$name.tar.Z ; \
	    echo \
	    "rm -f ../$$name" ; \
	     rm -f ../$$name

force:	/tmp
depend:	$(GENSRC) force
	../bin/mkdep -c $(CC) $(DEFS) $(INCLS) $(SRC)
